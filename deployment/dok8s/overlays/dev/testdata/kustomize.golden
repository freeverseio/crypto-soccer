apiVersion: v1
data:
  BLOCKS_PER_STEP: "10000"
  PROXY_CONTRACT_ADDRESS: 0x8D6dE4e048eFD765a05D154E1E310637FF9AaaB2
  freeverse_password: freeverse
  freeverse_username: freeverse
  market_id: ""
  notary_extra_args: -iap_test
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: freeverse-configmap
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: authproxy
    app.kubernetes.io/component: authproxy
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: authproxy
spec:
  ports:
  - port: 8080
  selector:
    app.kubernetes.io/app: authproxy
    app.kubernetes.io/component: authproxy
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: dashboard
spec:
  ports:
  - port: 80
  selector:
    app.kubernetes.io/app: dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: horizon
    app.kubernetes.io/component: horizon
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: horizon
spec:
  ports:
  - port: 4000
  selector:
    app.kubernetes.io/app: horizon
    app.kubernetes.io/component: horizon
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: marketdb
    app.kubernetes.io/component: marketdb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: marketdb
spec:
  ports:
  - port: 5432
  selector:
    app.kubernetes.io/app: marketdb
    app.kubernetes.io/component: marketdb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: notary
    app.kubernetes.io/component: notary
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: notary
spec:
  ports:
  - name: api
    port: 4000
    targetPort: 4000
  selector:
    app.kubernetes.io/app: notary
    app.kubernetes.io/component: notary
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: oauth2-proxy
    app.kubernetes.io/component: oauth2-proxy
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
    k8s-app: oauth2-proxy
  name: oauth2-proxy
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    app.kubernetes.io/app: oauth2-proxy
    app.kubernetes.io/component: oauth2-proxy
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
    k8s-app: oauth2-proxy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: relayactions
    app.kubernetes.io/component: relayactions
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: relayactions
spec:
  ports:
  - name: api
    port: 4000
    targetPort: 4000
  selector:
    app.kubernetes.io/app: relayactions
    app.kubernetes.io/component: relayactions
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: synchronizer
    app.kubernetes.io/component: synchronizer
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: synchronizer
spec:
  ports:
  - port: 4004
  selector:
    app.kubernetes.io/app: synchronizer
    app.kubernetes.io/component: synchronizer
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: trader
    app.kubernetes.io/component: trader
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: trader
spec:
  ports:
  - port: 4000
  selector:
    app.kubernetes.io/app: trader
    app.kubernetes.io/component: trader
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: universeapi
    app.kubernetes.io/component: universeapi
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: universeapi
spec:
  ports:
  - name: http
    port: 4000
    protocol: TCP
    targetPort: 4000
  selector:
    app.kubernetes.io/app: universeapi
    app.kubernetes.io/component: universeapi
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: universedb
    app.kubernetes.io/component: universedb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: universedb
spec:
  ports:
  - port: 5432
  selector:
    app.kubernetes.io/app: universedb
    app.kubernetes.io/component: universedb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: authproxy
    app.kubernetes.io/component: authproxy
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: authproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: authproxy
      app.kubernetes.io/component: authproxy
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: authproxy
        app.kubernetes.io/component: authproxy
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - args:
        - -timeout=30
        - -gqlurl
        - http://horizon:4000
        envFrom:
        - configMapRef:
            name: freeverse-configmap
        image: freeverseio/authproxy:dev
        imagePullPolicy: Always
        name: authproxy
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: dashboard
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: dashboard
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - image: freeverseio/dashboard:dev
        imagePullPolicy: Always
        name: dashboard
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: horizon
    app.kubernetes.io/component: horizon
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: horizon
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: horizon
      app.kubernetes.io/component: horizon
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: horizon
        app.kubernetes.io/component: horizon
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - args:
        - -u
        - http://universeapi:4000/graphql
        - -m
        - http://trader:4000/graphql
        - -r
        - http://relayactions:4000/graphql
        - -n
        - http://notary:4000/graphql
        envFrom:
        - configMapRef:
            name: freeverse-configmap
        image: freeverseio/horizon:dev
        imagePullPolicy: Always
        name: horizon
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: marketdb
    app.kubernetes.io/component: marketdb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: marketdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: marketdb
      app.kubernetes.io/component: marketdb
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: marketdb
        app.kubernetes.io/component: marketdb
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - image: freeverseio/market.db:dev
        imagePullPolicy: Always
        name: marketdb
        ports:
        - containerPort: 5432
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: notary
    app.kubernetes.io/component: notary
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: notary
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: notary
      app.kubernetes.io/component: notary
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: notary
        app.kubernetes.io/component: notary
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - args:
        - -postgres
        - postgres://$(freeverse_username):$(freeverse_password)@marketdb:5432/market?sslmode=disable
        - -ethereum
        - http://xdai:8545
        - -private_key
        - $(MARKET_PRIVATE_KEY)
        - -proxy_address
        - $(PROXY_CONTRACT_ADDRESS)
        - -market_id
        - $(market_id)
        - -google_key
        - /var/secrets/google/key.json
        - $(notary_extra_args)
        env:
        - name: MARKET_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: market
              name: blockchain-accounts
        envFrom:
        - configMapRef:
            name: freeverse-configmap
        image: freeverseio/market.notary:dev
        imagePullPolicy: Always
        name: notary
        ports:
        - containerPort: 4000
        volumeMounts:
        - mountPath: /var/secrets/google
          name: google-cloud-key
      imagePullSecrets:
      - name: docker-secret
      volumes:
      - name: google-cloud-key
        secret:
          secretName: google-iap-key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: oauth2-proxy
    app.kubernetes.io/component: oauth2-proxy
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
    k8s-app: oauth2-proxy
  name: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: oauth2-proxy
      app.kubernetes.io/component: oauth2-proxy
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/app: oauth2-proxy
        app.kubernetes.io/component: oauth2-proxy
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
        k8s-app: oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=google
        - --email-domain=freeverse.io
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: 113905956705-rqce79rekie163lp5ok72d0oi0mnglj7.apps.googleusercontent.com
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: f32eVJ8IJ_p3b9a9ryFEdyiJ
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: NsLSqSMefZFtt+IgomYmow==
        image: quay.io/pusher/oauth2_proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: relayactions
    app.kubernetes.io/component: relayactions
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: relayactions
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: relayactions
      app.kubernetes.io/component: relayactions
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: relayactions
        app.kubernetes.io/component: relayactions
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - args:
        - -postgres
        - postgres://$(freeverse_username):$(freeverse_password)@universedb:5432/cryptosoccer?sslmode=disable
        - -ethereum
        - http://xdai:8545
        - -proxy_address
        - $(PROXY_CONTRACT_ADDRESS)
        - -ipfs
        - /dns4/ipfsnode/tcp/5001
        - -private_key
        - $(RELAY_PRIVATE_KEY)
        env:
        - name: RELAY_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: relay
              name: blockchain-accounts
        envFrom:
        - configMapRef:
            name: freeverse-configmap
        image: freeverseio/relay.actions:dev
        imagePullPolicy: Always
        name: relayactions
        ports:
        - containerPort: 4000
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: synchronizer
    app.kubernetes.io/component: synchronizer
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: synchronizer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: synchronizer
      app.kubernetes.io/component: synchronizer
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: synchronizer
        app.kubernetes.io/component: synchronizer
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - args:
        - -postgres
        - postgres://$(freeverse_username):$(freeverse_password)@universedb:5432/cryptosoccer?sslmode=disable
        - -ethereum
        - http://xdai:8545
        - -ipfs
        - /dns4/ipfsnode/tcp/5001
        - -proxy_address
        - $(PROXY_CONTRACT_ADDRESS)
        - -staker
        - $(STAKER_PRIVATE_KEY)
        - -delta
        - $(BLOCKS_PER_STEP)
        env:
        - name: STAKER_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: staker
              name: blockchain-accounts
        envFrom:
        - configMapRef:
            name: freeverse-configmap
        image: freeverseio/synchronizer:dev
        imagePullPolicy: Always
        name: synchronizer
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: trader
    app.kubernetes.io/component: trader
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: trader
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: trader
      app.kubernetes.io/component: trader
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: trader
        app.kubernetes.io/component: trader
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - args:
        - -d
        - postgres://$(freeverse_username):$(freeverse_password)@marketdb:5432/market
        - -p
        - "4000"
        envFrom:
        - configMapRef:
            name: freeverse-configmap
        image: freeverseio/market.trader:dev
        imagePullPolicy: Always
        name: trader
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: universeapi
    app.kubernetes.io/component: universeapi
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: universeapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: universeapi
      app.kubernetes.io/component: universeapi
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: universeapi
        app.kubernetes.io/component: universeapi
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - args:
        - -d
        - postgres://$(freeverse_username):$(freeverse_password)@universedb:5432/cryptosoccer
        envFrom:
        - configMapRef:
            name: freeverse-configmap
        image: freeverseio/universe.api:dev
        imagePullPolicy: Always
        name: universeapi
        ports:
        - containerPort: 4000
      imagePullSecrets:
      - name: docker-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: universedb
    app.kubernetes.io/component: universedb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: universedb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: universedb
      app.kubernetes.io/component: universedb
      app.kubernetes.io/part-of: cryptosoccer
      app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      labels:
        app.kubernetes.io/app: universedb
        app.kubernetes.io/component: universedb
        app.kubernetes.io/part-of: cryptosoccer
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
      - env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: freeverseio/universe.db:dev
        imagePullPolicy: Always
        name: universedb
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: universedb-storage
      imagePullSecrets:
      - name: docker-secret
      volumes:
      - name: universedb-storage
        persistentVolumeClaim:
          claimName: universedb-pvc
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-freeverse
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-tls-error-page: http://www.mysite.com/error-cert.html
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
  labels:
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: cryptosoccer-ingress
spec:
  rules:
  - host: k8s.gorengine.com
    http:
      paths:
      - backend:
          serviceName: authproxy
          servicePort: 8080
        path: /auth
  tls:
  - hosts:
    - k8s.gorengine.com
    secretName: cryptosoccer-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://$host/oauth2/auth
  labels:
    app.kubernetes.io/app: dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: dashboard-external-auth-oauth2
spec:
  rules:
  - host: dashboard.gorengine.com
    http:
      paths:
      - backend:
          serviceName: dashboard
          servicePort: 80
        path: /
      - backend:
          serviceName: horizon
          servicePort: 4000
        path: /api
  tls:
  - hosts:
    - dashboard.gorengine.com
    secretName: cryptosoccer-dashboard-tls
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-freeverse
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-tls-error-page: http://www.mysite.com/error-cert.html
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
  labels:
    app.kubernetes.io/app: dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: dashboard-oauth2-proxy
spec:
  rules:
  - host: dashboard.gorengine.com
    http:
      paths:
      - backend:
          serviceName: oauth2-proxy
          servicePort: 4180
        path: /oauth2
  tls:
  - hosts:
    - dashboard.gorengine.com
    secretName: cryptosoccer-dashboard-tls
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/app: marketdb
    app.kubernetes.io/component: marketdb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: marketdb-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/app: universedb
    app.kubernetes.io/component: universedb
    app.kubernetes.io/part-of: cryptosoccer
    app.kubernetes.io/version: 1.0.0
  name: universedb-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
  storageClassName: do-block-storage
