
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
  name: external-auth-oauth2-phoenix
spec:
  rules:
  - host: web.gorengine.com
    http:
      paths:
      - backend:
          serviceName: phoenix
          servicePort: 80
        path: /
      - backend:
          serviceName: horizon
          servicePort: 4000
        path: /api

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: phoenix-oauth2-proxy
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    # Enable client certificate authentication
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    # Specify the verification depth in the client certificates chain
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    # Specify an error page to be redirected to verification errors
    nginx.ingress.kubernetes.io/auth-tls-error-page: "http://www.mysite.com/error-cert.html"
    # Specify if certificates are passed to upstream server
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    cert-manager.io/cluster-issuer: letsencrypt-freeverse
spec:
  rules:
  - host: web.gorengine.com
    http:
      paths:
      - backend:
          serviceName: phoenix-oauth2-proxy
          servicePort: 4180
        path: /oauth2
  tls:
  - hosts:
    - web.gorengine.com
    secretName: web-tls