# First stage: build the executable.
FROM golang:1.13.7-alpine AS builder
RUN apk add --no-cache ca-certificates git alpine-sdk linux-headers
# Create the user and group files that will be used in the running 
# container to run the process as an unprivileged user.
RUN mkdir /user && \
    echo 'nobody:x:65534:65534:nobody:/:' > /user/passwd && \
    echo 'nobody:x:65534:' > /user/group
WORKDIR /src
COPY . .
RUN go mod download
RUN CGO_ENABLED=1 go build -installsuffix 'static' -o /app -i cmd/synchronizer/synchronizer.go 

# Final stage: the running container.
FROM alpine AS final
RUN apk --no-cache add ca-certificates
COPY --from=builder /user/group /user/passwd /etc/
COPY --from=builder /app /app
COPY ./names/sql/names.db .
COPY cmd/synchronizer/data ./data
# Perform any further action as an unprivileged user.
USER nobody:nobody
# Run the compiled binary.
ENTRYPOINT ["/app"]
