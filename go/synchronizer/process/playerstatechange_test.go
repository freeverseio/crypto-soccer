package process_test

import (
	"math/big"
	"testing"

	"github.com/freeverseio/crypto-soccer/go/contracts/autogenerated/assets"
	"github.com/freeverseio/crypto-soccer/go/synchronizer/process"
	"github.com/freeverseio/crypto-soccer/go/testutils"
)

func TestNewSpecialPlayer(t *testing.T) {
	tx, err := universedb.Begin()
	if err != nil {
		t.Fatal(err)
	}
	defer tx.Rollback()
	bc, err := testutils.NewBlockchainNodeDeployAndInit()
	if err != nil {
		t.Fatal(err)
	}
	274877906944
	playerId, _ := new(big.Int).SetString("57896044618658097711785542341552232326515206756777149242398696258331718847466", 10)
	state, _ := new(big.Int).SetString("11425256194259610424594012086965331925454148519759026810474292549273807486976", 10)
	event := assets.AssetsPlayerStateChange{}
	event.PlayerId = playerId
	event.State = state
	if err = process.PlayerStateChangeProcess(tx, bc.Contracts, event); err != nil {
		t.Fatal(err)
	}
}
