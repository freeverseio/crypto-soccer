package match

import (
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/freeverseio/crypto-soccer/go/contracts/autogenerated/assets"
)

type Player struct {
	skills *big.Int
}

func NewPlayer(skills string) *Player {
	var player Player
	player.skills, _ = new(big.Int).SetString(skills, 10)
	return &player
}

func NewNullPlayer() *Player {
	player := Player{}
	player.skills = big.NewInt(0)
	return &player
}

func (b Player) Skills() *big.Int {
	return new(big.Int).Set(b.skills)
}

func (b Player) Defence(assets *assets.Assets) (uint64, error) {
	opts := &bind.CallOpts{}
	defence, err := assets.GetDefence(opts, b.skills)
	if err != nil {
		return 0, err
	}
	return defence.Uint64(), nil
}
