package process_test

import (
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/freeverseio/crypto-soccer/go/contracts/autogenerated/assets"
	"github.com/freeverseio/crypto-soccer/go/synchronizer/process"
	"github.com/freeverseio/crypto-soccer/go/synchronizer/storage"
)

func TestAssetsInitProcess(t *testing.T) {
	t.Parallel()
	tx, err := universedb.Begin()
	if err != nil {
		t.Fatal(err)
	}
	defer tx.Rollback()
	process, err := process.NewAssetsInitProcessor(bc.Contracts)
	if err != nil {
		t.Fatal(err)
	}

	creator := common.HexToAddress("123")

	event := assets.AssetsAssetsInit{
		CreatorAddr: creator,
	}
	err = process.Process(tx, event)
	if err != nil {
		t.Fatal(err)
	}
	team, err := storage.TeamByTeamId(tx, "1")
	if err != nil {
		t.Fatal(err)
	}
	if team.Name != "Academy" {
		t.Fatalf("Wrong team name. Expected: Academy, result: %v", team)
	}
	if team.Owner != creator.String() {
		t.Fatalf("Wrong team owner: %v", team.Owner)
	}
}
