package process

import (
	"github.com/freeverseio/crypto-soccer/go/contracts/autogenerated/assets"
	"github.com/freeverseio/crypto-soccer/go/synchronizer/storage"
)

type TeamTransferProcessor struct {
	universedb *storage.Storage
}

func NewTeamTransferProcessor(universedb *storage.Storage) (*TeamTransferProcessor, error) {
	processor := TeamTransferProcessor{}
	processor.universedb = universedb
	return &processor, nil
}

func (b *TeamTransferProcessor) Process(v assets.AssetsTeamTransfer) error {
	teamID := v.TeamId
	newOwner := v.To.String()
	team, err := b.universedb.GetTeam(teamID)
	if err != nil {
		return err
	}
	// team.State.BlockNumber = blockNumber
	team.State.Owner = newOwner
	return b.universedb.TeamUpdate(teamID, team.State)
}
