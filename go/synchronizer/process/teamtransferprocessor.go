package process

import (
	"database/sql"

	"github.com/freeverseio/crypto-soccer/go/contracts/autogenerated/assets"
	"github.com/freeverseio/crypto-soccer/go/synchronizer/storage"
)

type TeamTransferProcessor struct {
}

func NewTeamTransferProcessor() (*TeamTransferProcessor, error) {
	processor := TeamTransferProcessor{}
	return &processor, nil
}

func (b *TeamTransferProcessor) Process(tx *sql.Tx, v assets.AssetsTeamTransfer) error {
	teamID := v.TeamId.String()
	newOwner := v.To.String()
	team, err := storage.TeamByTeamId(tx, teamID)
	if err != nil {
		return err
	}
	// team.BlockNumber = blockNumber
	team.Owner = newOwner
	return team.Update(tx)
}
