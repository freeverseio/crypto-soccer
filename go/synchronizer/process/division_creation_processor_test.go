package process_test

import (
	"math/big"
	"testing"

	"github.com/freeverseio/crypto-soccer/go/contracts/autogenerated/assets"
	"github.com/freeverseio/crypto-soccer/go/synchronizer/process"
)

func TestDivisionCreationProcess(t *testing.T) {

	process, err := process.NewDivisionCreationProcessor(bc.Contracts, universedb, relaydb, namesdb)
	if err != nil {
		t.Fatal(err)
	}

	event := assets.AssetsDivisionCreation{
		Timezone:             uint8(1),
		CountryIdxInTZ:       big.NewInt(0),
		DivisionIdxInCountry: big.NewInt(0),
	}
	err = process.Process(event)
	if err != nil {
		t.Fatal(err)
	}
	player, err := universedb.GetPlayer(big.NewInt(274877906944))
	if err != nil {
		t.Fatal(err)
	}
	if player.State.Name == "" {
		t.Fatal("name is empty")
	}
	if player.DayOfBirth == 0 {
		t.Fatal("dayOfBirth is 0")
	}
}
