package contracts_test

import (
	"context"
	"testing"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/freeverseio/crypto-soccer/go/contracts"
	"github.com/freeverseio/crypto-soccer/go/contracts/autogenerated/directory"
	"gotest.tools/assert"
)

func TestNewByDeployedDirectoryEvent(t *testing.T) {
	directoryContract, err := directory.NewDirectory(common.HexToAddress(directoryAddress), client)
	assert.NilError(t, err)

	iter, err := directoryContract.FilterDeployedDirectory(&bind.FilterOpts{
		Start:   0,
		End:     nil,
		Context: context.Background(),
	})
	assert.NilError(t, err)

	events := []directory.DirectoryDeployedDirectory{}
	for iter.Next() {
		events = append(events, *iter.Event)
	}
	assert.Equal(t, len(events), 1)

	contrs, err := contracts.NewByDeployedDirectoryEvent(client, events[0])
	assert.NilError(t, err)
	t.Log(contrs)
	// TODO check the contracs are corrects
}
