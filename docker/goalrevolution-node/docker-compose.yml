version: '3'
services:
  ethereum: 
    image: openethereum/openethereum:v3.0.1
    command: --chain xdai --no-warp --min-peers 10 --max-peers 30 --jsonrpc-interface all
    restart: always
    volumes:
      - ethereum-data:/home/openethereum/.local/share/io.parity.ethereum
  ipfs.node:
    image: freeverseio/go-ipfs:v0.6.0
    restart: always
    environment:
      - IPFS_PATH=/data
      # - IPFS_FD_MAX=4096
      # - IPFS_PROFILE=test
    volumes:
      - ipfs.node-data:/data
  ipfs.cluster:
    image: ipfs/ipfs-cluster:v0.13.0
    restart: always
    entrypoint: ["ipfs-cluster-follow"]
    environment: 
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs.node/tcp/5001
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094
      CLUSTER_IPFSPROXY_LISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9095
      CLUSTER_IPFSPROXY_NODEMULTIADDRESS: /dns4/ipfs.node/tcp/5001
    command: gr-ipfs-cluster run --init https://ipfs.io/ipns/goalrevolution.collab.ipfs.cluster.goalrevolution.live
    depends_on: 
      - ipfs.node
    volumes:
      - ipfs.cluster-data:/data
  universe.db:
    image: "freeverseio/universe.db:${TAG}"
    restart: always
    volumes:
      - universe.db-data:/var/lib/postgresql/data
  synchronizer:
    image: "freeverseio/synchronizer:${TAG}"
    # build: 
    #   context: ../../go/
    #   dockerfile: Dockerfile.synchronizer
    restart: always
    command: > 
      -postgres postgres://freeverse:freeverse@universe.db:5432/cryptosoccer?sslmode=disable 
      -ipfs /dns4/ipfs.node/tcp/5001
      -ethereum http://ethereum:8545
      -proxy_address "${PROXY_CONTRACT_ADDRESS}"
      -staker "${STAKER_PVC}"
      -delta "${BLOCKS_PER_STEP}"
      -config-file=config_prod.json
      # -debug
    depends_on:
      - universe.db
      - ethereum
      - ipfs.node
      - ipfs.cluster
  universe.api:
    image: "freeverseio/universe.api:${TAG}"
    restart: always
    depends_on:
      - ethereum
    command: >
      -d postgres://freeverse:freeverse@universe.db:5432/cryptosoccer 
      --enableCors true
    ports:
      - "4000:4000"


  # market.db:
  #   image: freeverseio/market.db:$TAG
  # market.trader:
  #   image: freeverseio/market.trader:$TAG
  #   command: -d postgres://freeverse:freeverse@market.db:5432/market -p 4000
  # horizon:
  #   image: freeverseio/horizon:$TAG
  #   # build: 
  #   #   context: ../../nodejs-horizon/
  #   depends_on:
  #     - universe.api
  #     - market.trader
  #   command: >
  #     -u http://universe.api:4000/graphql 
  #     -m http://market.trader:4000/graphql 
  #   ports:
  #     - "4000:4000"

volumes:
  ethereum-data:
  ipfs.node-data:
  ipfs.cluster-data:
  universe.db-data:

