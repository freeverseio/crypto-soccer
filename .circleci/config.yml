:#: Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  freeverse:
    docker:
      - image: freeverseio/circleci
  freeverse_ethereum:
    docker:
      - image: freeverseio/circleci
      - image: freeverseio/xdai:test
        auth:
          username: $DOCKER_ID
          password: $DOCKER_PASSWD

      - image: postgres:11.6-alpine
        environment:
          - POSTGRES_USER=freeverse
          - POSTGRES_PASSWORD=freeverse
          - POSTGRES_DB=cryptosoccer
      - image: ipfs/go-ipfs:v0.4.18
        environment:
          - IPFS_PROFILE=server

jobs:
  truffle_core:
    executor: freeverse
    steps:
      - checkout
      - run: cd truffle-core && npm install
      - run: cd truffle-core && ./node_modules/.bin/truffle compile
      - run: cd truffle-core && ./node_modules/.bin/truffle test
  synchronizer:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: |
          sudo add-apt-repository -y ppa:ethereum/ethereum
          sudo apt-get update
          sudo apt-get install abigen
      - run: |
          wget https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz
          tar -xvf go1.13.3.linux-amd64.tar.gz -C /tmp
          echo 'export GOROOT="/tmp/go"' >> $BASH_ENV
          echo 'export PATH=$GOROOT/bin:$PATH' >> $BASH_ENV
      - run: |
          nvm install v10.15.1
          nvm alias default v10.15.1
          npm update -g
      - run: cd go/testutils && docker-compose up -d 
      - run: make setup contracts
      - run: cd go/cmd/synchronizer && go build ./synchronizer.go
      - run: cd go/synchronizer/process && go test ./... -v
      - run: cd go/synchronizer/storage && go test ./... -v
      - run: cd go/synchronizer/utils && go test ./... -v
      - run: cd go/synchronizer/engine && go test ./... -v
      - run: cd go/synchronizer/matchevents && go test ./... -v
  go1:
    executor: freeverse_ethereum
    steps:
      - checkout
      - run: cd universe.db && PGPASSWORD=freeverse psql -U freeverse -d cryptosoccer -h localhost -p 5432 -f *.sql
      - run: make setup contracts
      - run: cd go/contracts && go test ./...
      - run: cd go/useractions && go test ./...
      - run: cd go/marketpay/v1 && go test ./...
      # - run: cd go/testutils && go test ./...
      - run: cd go/names && go test ./...
  market-notary:
    executor: freeverse_ethereum
    steps:
      - checkout
      - run: make setup contracts
      - run: cd go/cmd/notary && go build ./notary.go
      - run: cd go/notary && go test ./... -p 1
  relay-actions:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: |
          sudo add-apt-repository -y ppa:ethereum/ethereum
          sudo apt-get update
          sudo apt-get install abigen
      - run: |
          wget https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz
          tar -xvf go1.13.3.linux-amd64.tar.gz -C /tmp
          echo 'export GOROOT="/tmp/go"' >> $BASH_ENV
          echo 'export PATH=$GOROOT/bin:$PATH' >> $BASH_ENV
      - run: |
          nvm install v10.15.1
          nvm alias default v10.15.1
          npm update -g
      - run: cd go/testutils && docker-compose up -d 
      - run: make setup contracts
      - run: cd go/cmd/relay && go build ./relay.go
      - run: cd go/relay && go test ./...
  market-trader:
    executor: freeverse
    steps:
      - checkout
      - run: cd market.trader && npm install
      - run: cd market.trader && npm test
  dockerization-development:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: make setup contracts
      - run: cd market.trader && docker build -t freeverseio/market.trader:dev .
      - run: cd universe.db && docker build -t freeverseio/universe.db:dev .
      - run: cd go && docker build -f Dockerfile.relay -t freeverseio/relay.actions:dev .
      - run: cd nodejs-horizon && docker build -t freeverseio/horizon:dev .
      - run: cd dashboard && docker build -t freeverseio/dashboard:dev .
      - run: cd market.db && docker build -t freeverseio/market.db:dev .
      - run: cd go && docker build -f Dockerfile.synchronizer -t freeverseio/synchronizer:dev .
      - run: cd go && docker build -f Dockerfile.notary -t freeverseio/market.notary:dev .
      - run: cd universe.api && docker build -t freeverseio/universe.api:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/synchronizer:dev
      - run: docker push freeverseio/horizon:dev
      - run: docker push freeverseio/universe.db:dev
      - run: docker push freeverseio/market.db:dev
      - run: docker push freeverseio/market.trader:dev
      - run: docker push freeverseio/market.notary:dev
      - run: docker push freeverseio/universe.api:dev
      - run: docker push freeverseio/relay.actions:dev
      - run: docker push freeverseio/dashboard:dev
  dockerization-production:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: make setup contracts
      - run: cd market.trader && docker build -t freeverseio/market.trader:${CIRCLE_TAG} .
      - run: cd universe.db && docker build -t freeverseio/universe.db:${CIRCLE_TAG} .
      - run: cd go && docker build -f Dockerfile.relay -t freeverseio/relay.actions:${CIRCLE_TAG} .
      - run: cd relay.api && docker build -t freeverseio/relay.api:${CIRCLE_TAG} .
      - run: cd relay.db && docker build -t freeverseio/relay.db:${CIRCLE_TAG} .
      - run: cd dashboard && docker build -t freeverseio/dashboard:${CIRCLE_TAG} .
      - run: cd nodejs-horizon && docker build -t freeverseio/horizon:${CIRCLE_TAG} .
      - run: cd market.db && docker build -t freeverseio/market.db:${CIRCLE_TAG} .
      - run: cd go && docker build -f Dockerfile.synchronizer -t freeverseio/synchronizer:${CIRCLE_TAG} .
      - run: cd go && docker build -f Dockerfile.notary -t freeverseio/market.notary:${CIRCLE_TAG} .
      - run: cd universe.api && docker build -t freeverseio/universe.api:${CIRCLE_TAG} .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/synchronizer:${CIRCLE_TAG}
      - run: docker push freeverseio/horizon:${CIRCLE_TAG}
      - run: docker push freeverseio/universe.db:${CIRCLE_TAG}
      - run: docker push freeverseio/market.db:${CIRCLE_TAG}
      - run: docker push freeverseio/market.trader:${CIRCLE_TAG}
      - run: docker push freeverseio/market.notary:${CIRCLE_TAG}
      - run: docker push freeverseio/relay.api:${CIRCLE_TAG}
      - run: docker push freeverseio/relay.db:${CIRCLE_TAG}
      - run: docker push freeverseio/universe.api:${CIRCLE_TAG}
      - run: docker push freeverseio/relay.actions:${CIRCLE_TAG}
      - run: docker push freeverseio/dashboard:${CIRCLE_TAG}
  deploy:
    executor: freeverse
    steps:
      - add_ssh_keys:
          fingerprints:
            - "1f:0d:ef:01:c6:82:5d:62:6c:2c:3f:57:37:ac:b9:13"
      - checkout
      - run: scp -o StrictHostKeyChecking=no ./deployment/development/docker-compose.yml $DROPLET_USER@$DROPLET_IP:./
      - run: scp -o StrictHostKeyChecking=no ./deployment/development/.env $DROPLET_USER@$DROPLET_IP:./
      - run: scp -o StrictHostKeyChecking=no ./deployment/development/deploy.sh $DROPLET_USER@$DROPLET_IP:./
      - run: ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP "./deploy.sh"
  deployk8s:
    docker:
      - image: freeverseio/circleci
    steps:
      - run: echo "Hello World!"
workflows:
  version: 2
  build_and_test:
    jobs:
      - truffle_core:
          filters:
            tags:
              only: /.*/
      - synchronizer:
          filters:
            tags:
              only: /.*/
      - go1:
          filters:
            tags:
              only: /.*/
      - market-trader:
          filters:
            tags:
              only: /.*/
      - relay-actions:
          filters:
            tags:
              only: /.*/
      # - relay-api:
      #     filters:
      #       tags:
      #         only: /.*/
      - market-notary:
          filters:
            tags:
              only: /.*/
      - dockerization-development:
          filters:
            branches:
              only:
                - dev
          requires:
            - synchronizer
            - market-trader
            # - relay-api
            - relay-actions
            - market-notary
            - go1
      - dockerization-production:
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+(.+)?/
            branches:
              ignore: /.*/
          requires:
            - synchronizer
            - market-trader
            # - relay-api
            - relay-actions
            - market-notary
      - deploy:
          filters:
           branches:
              only:
                - dev
          requires:
            - dockerization-development
            - truffle_core
      - deployk8s:
          filters:
           branches:
              only:
                - k8s
          requires:
            - synchronizer
            - market-trader
            - relay-actions
            - market-notary
            - go1
            - truffle_core

