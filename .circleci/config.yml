:#: Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  freeverse:
    docker:
      - image: freeverseio/circleci
      - image: freeverseio/ethereum:test
        auth:
          username: $DOCKER_ID
          password: $DOCKER_PASSWD

jobs:
  truffle_core:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd truffle-core && npm install
      - run: cd truffle-core && ./node_modules/.bin/truffle compile
      - run: cd truffle-core && ./node_modules/.bin/truffle test
  synchronizer:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: make setup contracts
      - run: cd go/cmd/synchronizer && go build ./synchronizer.go
      - run: cd go/synchronizer && go test ./...
      - run: cd go && docker build -f Dockerfile.synchronizer -t freeverseio/synchronizer:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/synchronizer:dev
  market-notary:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: make setup contracts
      - run: cd go/cmd/notary && go build ./notary.go
      - run: cd go/notary && go test ./... -p 1
      - run: cd go && docker build -f Dockerfile.notary -t freeverseio/market.notary:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/market.notary:dev
  relay-api:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: make setup contracts
      - run: cd relay.api && npm install
      - run: cd relay.api && npm test
      - run: cd relay.api && docker build -t freeverseio/relay.api:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/relay.api:dev
  relay-actions:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: make setup contracts
      - run: cd go/cmd/relay && go build ./relay.go
      - run: cd go/relay && go test ./...
      - run: cd go && docker build -f Dockerfile.relay -t freeverseio/relay.actions:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/relay.actions:dev
  market-trader:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd market.trader && npm install
      - run: cd market.trader && npm test
      - run: cd market.trader && docker build -t freeverseio/market.trader:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/market.trader:dev
  django-centauri:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd django-centauri && pip3 install django && pip3 install djangorestframework && pip3 install requests
      - run: cd django-centauri && python3 manage.py test
      - run: cd django-centauri && docker build -t freeverseio/centauri:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/centauri:dev
  universe-db:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd universe.db && docker build -t freeverseio/universe.db:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/universe.db:dev
  relay-db:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd relay.db && docker build -t freeverseio/relay.db:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/relay.db:dev
  horizon:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd nodejs-horizon && docker build -t freeverseio/horizon:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/horizon:dev
  market-db:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd market.db && docker build -t freeverseio/market.db:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/market.db:dev
  universe-api:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: cd universe.api && docker build -t freeverseio/universe.api:dev .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/universe.api:dev
  dockerization-production:
    executor: freeverse
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: make setup contracts
      - run: cd django-centauri && docker build -t freeverseio/centauri:${CIRCLE_TAG} .
      - run: cd market.trader && docker build -t freeverseio/market.trader:${CIRCLE_TAG} .
      - run: cd universe.db && docker build -t freeverseio/universe.db:${CIRCLE_TAG} .
      - run: cd go && docker build -f Dockerfile.relay -t freeverseio/relay.actions:${CIRCLE_TAG} .
      - run: cd relay.api && docker build -t freeverseio/relay.api:${CIRCLE_TAG} .
      - run: cd relay.db && docker build -t freeverseio/relay.db:${CIRCLE_TAG} .
      - run: cd nodejs-horizon && docker build -t freeverseio/horizon:${CIRCLE_TAG} .
      - run: cd market.db && docker build -t freeverseio/market.db:${CIRCLE_TAG} .
      - run: cd go && docker build -f Dockerfile.synchronizer -t freeverseio/synchronizer:${CIRCLE_TAG} .
      - run: cd go && docker build -f Dockerfile.notary -t freeverseio/market.notary:${CIRCLE_TAG} .
      - run: cd universe.api && docker build -t freeverseio/universe.api:${CIRCLE_TAG} .
      - run: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: docker push freeverseio/centauri:${CIRCLE_TAG}
      - run: docker push freeverseio/synchronizer:${CIRCLE_TAG}
      - run: docker push freeverseio/horizon:${CIRCLE_TAG}
      - run: docker push freeverseio/universe.db:${CIRCLE_TAG}
      - run: docker push freeverseio/market.db:${CIRCLE_TAG}
      - run: docker push freeverseio/market.trader:${CIRCLE_TAG}
      - run: docker push freeverseio/market.notary:${CIRCLE_TAG}
      - run: docker push freeverseio/relay.api:${CIRCLE_TAG}
      - run: docker push freeverseio/relay.db:${CIRCLE_TAG}
      - run: docker push freeverseio/universe.api:${CIRCLE_TAG}
      - run: docker push freeverseio/relay.actions:${CIRCLE_TAG}
  deploy:
    executor: freeverse
    steps:
      - add_ssh_keys:
          fingerprints:
            - "1f:0d:ef:01:c6:82:5d:62:6c:2c:3f:57:37:ac:b9:13"
      - checkout
      - run: scp -o StrictHostKeyChecking=no ./deployment/development/docker-compose.yml $DROPLET_USER@$DROPLET_IP:./
      - run: scp -o StrictHostKeyChecking=no ./deployment/development/.env $DROPLET_USER@$DROPLET_IP:./
      - run: scp -o StrictHostKeyChecking=no ./deployment/development/deploy.sh $DROPLET_USER@$DROPLET_IP:./
      - run: ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP "./deploy.sh"

workflows:
  version: 2
  build_and_test:
    jobs:
      - truffle_core:
          filters:
            tags:
              only: /.*/
      - synchronizer:
          filters:
            tags:
              only: /.*/
      - django-centauri:
          filters:
            tags:
              only: /.*/
      - market-trader:
          filters:
            tags:
              only: /.*/
      - relay-actions:
          filters:
            tags:
              only: /.*/
      - relay-api:
          filters:
            tags:
              only: /.*/
      - market-notary:
          filters:
            tags:
              only: /.*/
      - universe-db:
          filters:
            tags:
              only: /.*/
      - relay-db:
          filters:
            tags:
              only: /.*/
      - horizon:
          filters:
            tags:
              only: /.*/
      - market-db:
          filters:
            tags:
              only: /.*/
      - universe-api:
          filters:
            tags:
              only: /.*/
      - dockerization-production:
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+.+/
            branches:
              ignore: /.*/
          requires:
            - synchronizer
            - django-centauri
            - market-trader
            - relay-api
            - relay-actions
            - market-notary
      - deploy:
          filters:
           branches:
              only:
                - dev
          requires:
            - synchronizer
            - django-centauri
            - market-trader
            - relay-api
            - relay-actions
            - market-notary
            - truffle_core
            - universe-db
            - relay-db
            - horizon
            - market-db
            - universe-api
