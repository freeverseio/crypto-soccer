# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  truffle_core:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - run: 
          name: Set up truffle-core
          command: cd truffle-core && npm install
      - run:
          name: Compile truffle-core
          command: cd truffle-core && ./node_modules/.bin/truffle compile
      - run:
          name: Test truffle-core
          command: cd truffle-core && ./node_modules/.bin/truffle test
  go-synchronizer:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - run: 
          name: deploy contracts
          command: make setup contracts
      - run:
          name: Compile go-synchronizer
          command: cd go-synchronizer && go build
      - run:
          name: Test go-synchronizer
          command: cd go-synchronizer && go test `go list ./... | grep -v github.com/freeverseio/crypto-soccer/go-synchronizer/process`
      - run:
          name: Test go-synchronizer.process
          command: |
            # run ganache in the background
            ./go-synchronizer/testutils/run_ganache.sh &
            # wait until ganache is up and running
            echo waiting for ganache
            while [ -z "`lsof -i -P -n | grep 8545`" ]; do sleep 0.1; done
            sleep 1
            echo ganache is running
            cd go-synchronizer/process
            go test
            #echo ganache PID `grep "ganache-cli --deterministic" | tr -s ' ' | cut -d ' ' -f 2`
  go-soccer:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - run:
          name: Compile goSoccer
          command: cd go-soccer && go build
      - run:
          name: Test goSoccer
          command: cd go-soccer && go test ./...
  nodejs-horizon:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - run: 
          name: deploy contracts
          command: make setup contracts
      - run:
          name: Setup nodejs-horizon
          command: cd nodejs-horizon && npm install
      - run:
          name: Test nodejs-horizon
          command: cd nodejs-horizon && npm test
  nodejs-market-api:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - run:
          name: Setup 
          command: cd market/nodejs-market-api && npm install
  reactjs-frontend:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - run:
          name: Setup reactjs-frontend
          command: cd reactjs-frontend && npm install
      - run:
          name: Test reactjs-frontend
          command: cd reactjs-frontend && npm test
      - run:
          name: Build reactjs-frontend
          command: cd reactjs-frontend && npm run build
  django-centauri:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - run:
          name: Build Centauri
          command: cd django-centauri && pip3 install django && pip3 install djangorestframework && pip3 install requests
      - run:
          name: Test Centauri
          command: cd django-centauri && python3 manage.py test
  dockerization:
    docker:
      - image: freeverseio/circleci
    steps:
      - checkout
      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
      - run: 
          name: deploy contracts
          command: make setup contracts
      - run:
          name: Create Docker Centauri
          command: cd django-centauri && docker build -t freeverseio/centauri:dev .
      - run:
          name: Create Docker Synchronizer
          command: cd go-synchronizer && docker build -t freeverseio/synchronizer:dev .
      - run:
          name: Create Docker Postgres
          command: cd go-synchronizer/sql && docker build -t freeverseio/postgres:dev .
      - run:
          name: Create Docker Horizon
          command: cd nodejs-horizon && docker build -t freeverseio/horizon:dev .
      - run:
          name: Create Docker Market-DB
          command: cd market/go-market/sql && docker build -t freeverseio/marketdb .
      - run:
          name: Create Docker Market-API
          command: cd market/nodejs-market-api && docker build -t freeverseio/marketapi .
      - run:
          name: Login into Docker Hub
          command: echo $DOCKER_PASSWD | docker login -u $DOCKER_ID --password-stdin
      - run: 
          name: Upload Docker Centauri
          command: docker push freeverseio/centauri:dev
      - run: 
          name: Upload Docker Synchronizer
          command: docker push freeverseio/synchronizer:dev
      - run: 
          name: Upload Docker Horizon
          command: docker push freeverseio/horizon:dev
      - run: 
          name: Upload Docker Postgres
          command: docker push freeverseio/postgres:dev
      - run:
          name: Upload Docker Market-DB
          command: docker push freeverseio/marketdb:dev
      - run:
          name: Upload Docker Market-API
          command: docker push freeverseio/marketapi:dev

  deploy:
    docker:
      - image: freeverseio/circleci
    steps:
      - add_ssh_keys:
          fingerprints:
            - "1f:0d:ef:01:c6:82:5d:62:6c:2c:3f:57:37:ac:b9:13"
      - checkout
      - run: 
          name: upload docker-compose config
          command: scp -o StrictHostKeyChecking=no ./deployment/docker-compose.development.yml $DROPLET_USER@$DROPLET_IP:./
      - run: 
          name: deploy
          command: ssh -o StrictHostKeyChecking=no $DROPLET_USER@$DROPLET_IP "./deploy.sh"
workflows:
  version: 2
  build_and_test:
    jobs:
      - truffle_core
      - go-synchronizer
      - go-soccer
      - reactjs-frontend
      - django-centauri
      - nodejs-horizon
      - nodejs-market-api
      - dockerization:
          filters:
            branches:
              only:
                - dev
                - ci
          requires:
            - go-synchronizer
            - django-centauri
            - nodejs-horizon
            - nodejs-market-api
      - deploy:
          filters:
           branches:
              only:
                - dev
          requires:
            - dockerization
            - truffle_core
            - go-soccer
            - reactjs-frontend


